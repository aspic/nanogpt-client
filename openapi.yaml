openapi: 3.1.0
info:
  title: NanoGPT API
  description: API for interacting with NanoGPT's text and image generation services.
  version: 1.0.0
servers:
  - url: https://nano-gpt.com/api
    description: Primary API endpoint
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: API_KEY
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
  parameters:
    TemperatureParam:
      name: temperature
      in: query
      required: false
      description: Controls randomness (0 to 2).
      schema:
        type: number
        format: float
    MaxTokensParam:
      name: max_tokens
      in: query
      required: false
      description: Maximum number of tokens to generate.
      schema:
        type: integer
    StreamParam:
      name: stream
      in: query
      required: false
      description: Whether to stream the response.
      schema:
        type: boolean
    StopParam:
      name: stop
      in: query
      required: false
      description: Up to 4 sequences where the API will stop generating.
      schema:
        type: array
        items:
          type: string
    TopPParam:
      name: top_p
      in: query
      required: false
      description: Nucleus sampling probability.
      schema:
        type: number
        format: float
    TopKParam:
      name: top_k
      in: query
      required: false
      description: Limits the next token selection to the K most likely tokens.
      schema:
        type: integer
    FrequencyPenaltyParam:
      name: frequency_penalty
      in: query
      required: false
      description: Reduces token repetition (-2.0 to 2.0).
      schema:
        type: number
        format: float
    PresencePenaltyParam:
      name: presence_penalty
      in: query
      required: false
      description: Increases likelihood of new topics (-2.0 to 2.0).
      schema:
        type: number
        format: float
    LogitBiasParam:
      name: logit_bias
      in: query
      required: false
      description: Modify the probability of specified tokens.
      schema:
        type: object
    UserParam:
      name: user
      in: query
      required: false
      description: Unique identifier for the end-user.
      schema:
        type: string
    NParam:
      name: n
      in: query
      required: false
      description: Number of choices to generate.
      schema:
        type: integer
    NumberOfSteps:
      name: num_steps
      in: query
      required: false
      schema:
        type: integer
    Resolution:
      name: resolution
      in: query
      required: false
      description: Dimensions for the generated image (e.g., "256x256").
      schema:
        type: string
    ImageSamplerName:
      name: sampler_name
      in: query
      required: false
      description: 'DPM++ 2S a Karras'
      schema:
        type: string
    ImageScale:
      name: scale
      in: query
      required: false
      description: 'In Stable Diffusion, most models default guidance scale value is between seven and 7.5. A lower number incorporates more creativity in the final image while a higher number indicates that the image is closely tied to the text prompt.'
      schema:
        type: float
    ImageWidth:
      name: width
      in: query
      required: false
      description: Width of image to generate
      schema:
        type: integer
    ImageHeight:
      name: height
      in: query
      required: false
      description: Height of image to generate
      schema:
        type: integer
    SeedParam:
      name: seed
      in: query
      required: false
      description: Seed for deterministic sampling.
      schema:
        type: integer
    ResponseFormatParam:
      name: response_format
      in: query
      required: false
      description: Format for the generated output.
      schema:
        type: string
    ToolsParam:
      name: tools
      in: query
      required: false
      description: List of tools the model may call.
      schema:
        type: array
        items:
          type: string
    ToolChoiceParam:
      name: tool_choice
      in: query
      required: false
      description: Controls how functions are called by the model.
      schema:
        type: string
  schemas:
    ChatModel:
      type: string
      enum:
        - recommended-model
        - gpt-4.5-preview
        - o3-mini
        - o3-mini-high
        - o3-mini-low
        - o1
        - chatgpt-4o-latest
        - gemini-2.0-pro-exp-02-05
        - gemini-exp-1206
        - model-selector
        - sonar-deep-research
        - qwq-32b
        - kimi-k1.5-preview
        - gemini-2.0-flash-thinking-exp-1219
        - gemini-2.0-flash-exp
        - gemini-2.0-flash-thinking-exp-01-21
        - o1-preview
        - deep-research
        - gemini-2.0-flash-exp-search
        - doubao-1.5-pro-256k
        - gemini-2.0-flash-001
        - gemini-2.0-flash-lite
        - claude-3-7-sonnet-20250219
        - claude-3-7-sonnet-thinking
        - claude-3-5-sonnet-20241022
        - deepseek-r1-nano
        - aion-labs/aion-1.0-mini
        - aion-labs/aion-1.0
        - deepclaude
        - deepseek-chat
        - deepseek-r1-llama-70b
        - minimax/minimax-01
        - google/gemma-3-27b-it
        - glm-zero-preview
        - hunyuan-turbos-20250226
        - step-2-16k-exp
        - glm-4-plus-0111
        - glm-4-air-0111
        - step-2-mini
        - doubao-1.5-pro-32k
        - doubao-1.5-vision-pro-32k
        - Qwen/QwQ-32B-Preview
        - kimi-latest
        - step-2-16k
        - meta-llama/llama-3.3-70b-instruct
        - dolphin-2.9.2-qwen2-72b
        - nvidia/Llama-3.1-Nemotron-70B-Instruct-HF
        - Sao10K/L3-8B-Stheno-v3.2
        - claude-3-5-sonnet-20240620
        - claude-3-5-haiku-20241022
        - claude-3-opus-20240229
        - yi-lightning
        - amazon/nova-pro-v1
        - gpt-4o-mini
        - glm-4-plus
        - learnlm-1.5-pro-experimental
        - Meta-Llama-3-1-405B-Instruct-FP8
        - nousresearch/hermes-3-llama-3.1-405b
        - qwen-turbo
        - qwen-max
        - qwen-plus
        - qwen-long
        - Qwen/Qwen2.5-Coder-32B-Instruct
        - phi-4-multimodal-instruct
        - phi-4-mini-instruct
        - amazon/nova-lite-v1
        - amazon/nova-micro-v1
        - yi-large
        - yi-medium-200k
        - Mistral-Nemo-12B-ArliAI-RPMax-v1.2
        - Mistral-Nemo-12B-Wayfarer
        - TheDrummer/Cydonia-24B-v2
        - EVA-UNIT-01/EVA-LLaMA-3.33-70B-v0.0
        - abacusai/Dracarys-72B-Instruct
        - mistralai/mistral-large
        - NeverSleep/Lumimaid-v0.2-70B
        - deepseek-chat-cheaper
        - inflection/inflection-3-pi
        - inflection/inflection-3-productivity
        - microsoft/wizardlm-2-8x22b
        - raifle/sorcererlm-8x22b
        - gpt-4o-2024-08-06
        - gpt-4o-2024-11-20
        - meta-llama/llama-3.2-90b-vision-instruct
        - huihui-ai/Llama-3.3-70B-Instruct-abliterated
        - sonar-pro
        - sonar-reasoning-pro
        - sonar-reasoning
        - google/gemini-flash-1.5
        - sonar
        - Gryphe/MythoMax-L2-13b
        - glm-4
        - glm-4-long
        - qwen/qwen-2.5-72b-instruct
        - eva-unit-01/eva-qwen-2.5-72b
        - yi-34b-chat-200k
        - yi-34b-chat-0205
        - yi-large-turbo
        - gpt-4-turbo-preview
        - gpt-4o
        - gpt-3.5-turbo
        - free-model
        - anthracite-org/magnum-v4-72b
        - EVA-UNIT-01/EVA-Qwen2.5-32B-v0.2
        - thedrummer/skyfall-36b-v2
        - GalrionSoftworks/MN-LooseCannon-12B-v1
        - EVA-UNIT-01/EVA-Qwen2.5-72B-v0.2
        - EVA-UNIT-01/EVA-LLaMA-3.33-70B-v0.1
        - cognitivecomputations/dolphin-mixtral-8x22b
        - thedrummer/anubis-pro-105b-v1
        - meta-llama/llama-3.1-8b-instruct
        - undi95/remm-slerp-l2-13b
        - mistralai/mistral-tiny
        - mistralai/mistral-saba
        - mistralai/mistral-7b-instruct
        - microsoft/wizardlm-2-7b
        - deepseek-ai/DeepSeek-R1-Zero
        - cohere/command-r
        - cohere/command-r-plus-08-2024
        - mlabonne/NeuralDaredevil-8B-abliterated
        - failspy/Meta-Llama-3-70B-Instruct-abliterated-v3.5
        - huihui-ai/Llama-3.1-Nemotron-70B-Instruct-HF-abliterated
        - anthracite-org/magnum-v2-72b
        - Steelskull/L3.3-Damascus-R1
        - mistralai/Mistral-Nemo-Instruct-2407
        - deepseek-reasoner
        - Llama-3.3+3.1-70B-ArliAI-RPMax-v1.3
        - Envoid/Llama-3.05-NT-Storybreaker-Ministral-70B
        - Envoid/Llama-3.05-Nemotron-Tenyxchat-Storybreaker-70B
        - inflatebot/MN-12B-Mag-Mell-R1
        - Steelskull/L3.3-MS-Evayale-70B
        - NeverSleep/Llama-3-Lumimaid-70B-v0.1
        - Steelskull/L3.3-MS-Evalebis-70b
        - TheDrummer/Anubis-70B-v1
        - Qwen2.5-32B-EVA-v0.2
        - Llama-3.3-70B-MiraiFanfare
        - Qwen2.5-32B-Dazzling-Star-Aurora-32b-v0.0
        - meta-llama/llama-3.2-3b-instruct
        - Meta-Llama-3-1-8B-Instruct-FP8
        - glm-4-airx
        - glm-4-air
        - glm-4-flash
        - Sao10K/L3.1-70B-Hanami-x1
        - TheDrummer/Rocinante-12B-v1.1
        - Sao10K/L3.3-70B-Euryale-v2.3
        - Sao10K/L3.1-70B-Euryale-v2.2
        - Steelskull/L3.3-Cu-Mai-R1-70b
        - TheDrummer/UnslopNemo-12B-v4.1
        - MarinaraSpaghetti/NemoMix-Unleashed-12B
        - VongolaChouko/Starcannon-Unleashed-12B-v1.0
        - nothingiisreal/L3.1-70B-Celeste-V0.1-BF16
        - Infermatic/MN-12B-Inferor-v0.0
        - Nexusflow/Athene-V2-Chat
        - huihui-ai/DeepSeek-R1-Distill-Qwen-32B-abliterated
        - huihui-ai/DeepSeek-R1-Distill-Llama-70B-abliterated
        - deepseek-reasoner-cheaper
        - aion-labs/aion-rp-llama-3.1-8b
        - azure-o1
        - azure-o3-mini
        - azure-gpt-4o
        - azure-gpt-4o-mini
        - azure-gpt-4-turbo
        - jamba-large-1.6
        - jamba-mini-1.6
        - Llama-3.1-Tulu-3-405B
        - deepseek-r1-sambanova
        - r1-1776
        - LatitudeGames/Wayfarer-Large-70B-Llama-3.3
        - claude-3-7-sonnet-thinking:1024
        - claude-3-7-sonnet-thinking:8192
        - claude-3-7-sonnet-thinking:32768
        - claude-3-7-sonnet-thinking:128000
        - gpt-4o-reasoner
        - gpt-4.5-preview-2025-02-27-reasoner
        - gemini-2.0-pro-reasoner
        - chatgpt-4o-latest-reasoner
    ImageModel:
      type: string
      enum:
        - recraft-v3
        - flux-pro/v1.1
        - imagen-3.0-generate-002
        - flux-pro/v1.1-ultra
        - ideogram-ai/ideogram-v2
        - flux-lora
        - flux-lightning
        - flux/schnell
        - stable-diffusion-v35-large
        - ideogram-ai/ideogram-v2-turbo
        - flux-realism
        - dall-e-3
        - dall-e-3-hd
        - stable-diffusion-v35-large/turbo
        - playground-v25
        - proteus-v0.2
        - promptchan
        - sd3_base_medium.safetensors
        - dreamshaper_8_93211.safetensors
        - revAnimated_v122.safetensors
        - fast-sdxl
        - flux-pro
        - longstories
        - longstories-kids
    NegativePrompt:
      type: string
      required: false
      description: Things to exclude in the generated image.
    Message:
      type: object
      properties:
        role:
          type: string
          description: The role of the message sender (e.g., 'user', 'assistant').
          enum:
            - user
            - assistant
            - system
        content:
          type: string
          description: The content of the message.
    Delta:
      type: object
      properties:
        content:
          type: string
          description: The content of the delta.

    PaymentSource:
      type: string
      enum:
        - XNO
    Cost:
      type: float
      description: Cost for running the query.
    RemainingBalance:
      type: float
      description: Remaining balance in wallet.
    Object:
      type: string
      enum:
        - list
        - model
    Created:
      type: integer
      description: Timestamp when the completion was created.
    NanoAddress:
      type: string
      description: Nano address
paths:
  /v1/chat/completions:
    post:
      summary: Create a chat completion
      description: Generate a chat-based completion using the specified parameters.
      operationId: createChatCompletion
      security:
        - BearerAuth: []
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  $ref: '#/components/schemas/ChatModel'
                messages:
                  type: array
                  items:
                    $ref: '#/components/schemas/Message'
                temperature:
                  $ref: '#/components/parameters/TemperatureParam'
                max_tokens:
                  $ref: '#/components/parameters/MaxTokensParam'
                stream:
                  $ref: '#/components/parameters/StreamParam'
                stop:
                  $ref: '#/components/parameters/StopParam'
                top_p:
                  $ref: '#/components/parameters/TopPParam'
                top_k:
                  $ref: '#/components/parameters/TopKParam'
                frequency_penalty:
                  $ref: '#/components/parameters/FrequencyPenaltyParam'
                presence_penalty:
                  $ref: '#/components/parameters/PresencePenaltyParam'
                logit_bias:
                  $ref: '#/components/parameters/LogitBiasParam'
                user:
                  $ref: '#/components/parameters/UserParam'
                n:
                  $ref: '#/components/parameters/NParam'
                seed:
                  $ref: '#/components/parameters/SeedParam'
                response_format:
                  $ref: '#/components/parameters/ResponseFormatParam'
                tools:
                  $ref: '#/components/parameters/ToolsParam'
                tool_choice:
                  $ref: '#/components/parameters/ToolChoiceParam'
      responses:
        '200':
          description: Successful chat completion response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the completion.
                  object:
                    type: string
                    description: Typically 'chat.completion'.
                  created:
                    $ref: '#/components/schemas/Created'
                  model:
                    $ref: '#/components/schemas/ChatModel'
                  choices:
                    type: array
                    items:
                      type: object
                      properties:
                        index:
                          type: integer
                          description: Index of the generated choice.
                        message:
                          $ref: '#/components/schemas/Message'
                        delta:
                          $ref: '#/components/schemas/Delta'
                        finish_reason:
                          type: string
                          description: Reason the generation was stopped.
                  usage:
                    type: object
                    properties:
                      prompt_tokens:
                        type: integer
                        description: Number of tokens in the prompt.
                      completion_tokens:
                        type: integer
                        description: Number of tokens in the completion.
                      total_tokens:
                        type: integer
                        description: Total tokens used.
                  nanoGPT:
                    type: object
                    properties:
                      cost:
                        $ref: '#/components/schemas/Cost'
                      inputTokens:
                        type: integer
                        description: Number of input tokens
                      outputTokens:
                        type: integer
                        description: Number of output tokens
                      paymentSource:
                        $ref: '#/components/schemas/PaymentSource'
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Details about the invalid request.
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Authentication error.
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Server-side error details.
  /generate-image:
    post:
      summary: Generate an image
      description: Create an image based on the provided prompt and parameters.
      operationId: generateImage
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: Text prompt for image generation.
                model:
                  $ref: '#/components/schemas/ImageModel'
                width:
                  $ref: '#/components/parameters/ImageWidth'
                height:
                  $ref: '#/components/parameters/ImageHeight'
                negative_prompt:
                  $ref: '#/components/schemas/NegativePrompt'
                nImages:
                  $ref: '#/components/parameters/NParam'
                num_steps:
                  $ref: '#/components/parameters/NumberOfSteps'
                resolution:
                  $ref: '#/components/parameters/Resolution'
                sampler_name:
                  $ref: '#/components/parameters/ImageSamplerName'
                scale:
                  $ref: '#/components/parameters/ImageScale'
              required:
                - prompt
                - model
                - width
                - height
      responses:
        '200':
          description: Successful image generation response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: integer
                    description: Timestamp of image creation.
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          description: URL of the generated image.
                        b64_json:
                          type: string
                          description: Base64-encoded JSON of the image.
                  cost:
                    $ref: '#/components/schemas/Cost'
                  paymentSource:
                    $ref: '#/components/schemas/PaymentSource'
                  remainingBalance:
                    $ref: '#/components/schemas/RemainingBalance'

        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Details about the invalid request.
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Authentication error.
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Server-side error details.
  /v1/models:
    get:
      summary: Retrieve available models
      description: Retrieve all available models on the OpenAI models endpoint format
      operationId: models
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Models data retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    $ref: '#/components/schemas/Object'
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Model id
                        object:
                          $ref: '#/components/schemas/Object'
                        created:
                          $ref: '#/components/schemas/Created'
                        owned_by:
                          type: string
                          description: Organization / owner of the model.
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Details about the invalid request.
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Authentication error.
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Server-side error details.
  /check-nano-balance:
    post:
      summary: Check nano balance for account
      description: Returns balance, receivable and earned for the account
      operationId: balance
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Balance received successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: float
                    description: Remaining balance for the account.
                  receivable:
                    type: float
                    description: Receivable for the account.
                  earned:
                    type: float
                    description: Earned for the account.
                  nanoDepositAddress:
                    $ref: '#/components/schemas/NanoAddress'
                  nanoReturnAddress:
                    $ref: '#/components/schemas/NanoAddress'
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Details about the invalid request.
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Authentication error.
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Server-side error details.
